***REMOVED***!/bin/bash
***REMOVED***
***REMOVED*** Licensed to the Apache Software Foundation (ASF) under one or more
***REMOVED*** contributor license agreements.  See the NOTICE file distributed with
***REMOVED*** this work for additional information regarding copyright ownership.
***REMOVED*** The ASF licenses this file to You under the Apache License, Version 2.0
***REMOVED*** (the "License"); you may not use this file except in compliance with
***REMOVED*** the License.  You may obtain a copy of the License at
***REMOVED***
***REMOVED***     http://www.apache.org/licenses/LICENSE-2.0
***REMOVED***
***REMOVED*** Unless required by applicable law or agreed to in writing, software
***REMOVED*** distributed under the License is distributed on an "AS IS" BASIS,
***REMOVED*** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
***REMOVED*** See the License for the specific language governing permissions and
***REMOVED*** limitations under the License.
***REMOVED***
***REMOVED*** Shell script to make a backup of a Solr Lucene collection.

orig_dir=$(pwd)
cd ${0%/*}/..
solr_root=$(pwd)
cd ${orig_dir}

unset data_dir user verbose debug
. ${solr_root}/bin/scripts-util

***REMOVED*** set up variables
prog=${0***REMOVED******REMOVED****/}
log=${solr_root}/logs/${prog}.log

***REMOVED*** define usage string
USAGE="\
usage: $prog [-d dir] [-u username] [-v]
       -d          specify directory holding index data
       -u          specify user to sudo to before running script
       -v          increase verbosity
       -V          output debugging info
"

***REMOVED*** parse args
while getopts d:u:vV OPTION
do
    case $OPTION in
    d)
        data_dir="$OPTARG"
        ;;
    u)
        user="$OPTARG"
        ;;
    v)
        verbose="v"
        ;;
    V)
        debug="V"
        ;;
    *)
        echo "$USAGE"
        exit 1
    esac
done

[[ -n $debug ]] && set -x

***REMOVED*** use default value for data_dir if not specified
***REMOVED*** relative path starts at ${solr_root}
if [[ -z ${data_dir} ]]
then
    data_dir=${solr_root}/data
elif [[ "`echo ${data_dir}|cut -c1`" != "/" ]]
then
    data_dir=${solr_root}/${data_dir}
fi

fixUser "$@"

start=`date +"%s"`

logMessage started by $oldwhoami
logMessage command: $0 $@

name=backup.`date +"%Y%m%d%H%M%S"`
temp=temp-${name}

if [[ -d ${data_dir}/${name} ]]
then
    logMessage backup directory ${data_dir}/${name} already exists
    logExit aborted 1
fi

if [[ -d ${data_dir}/${temp} ]]
then
    logMessage backingup of ${data_dir}/${name} in progress
    logExit aborted 1
fi

***REMOVED*** clean up after INT/TERM
trap 'echo cleaning up, please wait ...;/bin/rm -rf ${data_dir}/${name} ${data_dir}/${temp};logExit aborted 13' INT TERM

logMessage making backup ${data_dir}/${name}

***REMOVED*** make a backup using hard links into temporary location
***REMOVED*** then move it into place atomically
cp -lr ${data_dir}/index ${data_dir}/${temp}
mv ${data_dir}/${temp} ${data_dir}/${name}

logExit ended 0

