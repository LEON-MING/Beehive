***REMOVED***!/bin/bash
***REMOVED***
***REMOVED*** Licensed to the Apache Software Foundation (ASF) under one or more
***REMOVED*** contributor license agreements.  See the NOTICE file distributed with
***REMOVED*** this work for additional information regarding copyright ownership.
***REMOVED*** The ASF licenses this file to You under the Apache License, Version 2.0
***REMOVED*** (the "License"); you may not use this file except in compliance with
***REMOVED*** the License.  You may obtain a copy of the License at
***REMOVED***
***REMOVED***     http://www.apache.org/licenses/LICENSE-2.0
***REMOVED***
***REMOVED*** Unless required by applicable law or agreed to in writing, software
***REMOVED*** distributed under the License is distributed on an "AS IS" BASIS,
***REMOVED*** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
***REMOVED*** See the License for the specific language governing permissions and
***REMOVED*** limitations under the License.
***REMOVED***
***REMOVED*** Shell script to force a optimized commit of all changes since last commit
***REMOVED*** for a Solr server

orig_dir=$(pwd)
cd ${0%/*}/..
solr_root=$(pwd)
cd ${orig_dir}
curl_url=""

unset solr_hostname solr_port webapp_name user verbose debug solr_url
. ${solr_root}/bin/scripts-util

***REMOVED*** set up variables
prog=${0***REMOVED******REMOVED****/}
log=${solr_root}/logs/${prog}.log

***REMOVED*** define usage string
USAGE="\
usage: $prog [-h hostname] [-p port] [-u username] [-U url] [-v] [-V]
       -h          specify Solr hostname (defaults to localhost)
       -p          specify Solr port number
       -w          specify name of Solr webapp (defaults to solr)
       -u          specify user to sudo to before running script
       -U          specify full update url (overrides -h,-p,-w parameters)
       -v          increase verbosity
       -V          output debugging info
"

***REMOVED*** parse args
originalargs="$@"
while getopts h:p:w:u:U:vV OPTION
do
    case $OPTION in
    h)
        solr_hostname="$OPTARG"
        ;;
    p)
        solr_port="$OPTARG"
        ;;
    w)
        webapp_name="$OPTARG"
        ;;
    u)
        user="$OPTARG"
        ;;
    U)
        solr_url="$OPTARG"
        ;;
    v)
        verbose="v"
        ;;
    V)
        debug="V"
        ;;
    *)
        echo "$USAGE"
        exit 1
    esac
done

[[ -n $debug ]] && set -x

if [[ -n ${solr_url} ]]
then
  curl_url=${solr_url}
else
  if [[ -z ${solr_port} ]]
  then
    echo "Solr port number missing in $confFile or command line."
    echo "$USAGE"
    exit 1
  fi

  ***REMOVED*** use default hostname if not specified
  if [[ -z ${solr_hostname} ]]
  then
    solr_hostname=localhost
  fi

  ***REMOVED*** use default webapp name if not specified
  if [[ -z ${webapp_name} ]]
  then
    webapp_name=solr
  fi
  curl_url=http://${solr_hostname}:${solr_port}/${webapp_name}/update
fi

fixUser "$@"

start=`date +"%s"`

logMessage started by $oldwhoami
logMessage command: $0 $@

rs=`curl ${curl_url} -s -H 'Content-type:text/xml; charset=utf-8' -d "<optimize/>"`
if [[ $? != 0 ]]
then
  logMessage failed to connect to Solr server at ${curl_url}
  logMessage optimize failed
  logExit failed 1
fi

***REMOVED*** check status of optimize request
rc=`echo $rs|cut -f2 -d'"'`
if [[ $? != 0 ]]
then
  logMessage optimize request to Solr at ${curl_url} failed:
  logMessage $rs
  logExit failed 2
fi

logExit ended 0
